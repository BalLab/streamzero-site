<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ferris Labs – Configuring Databases</title>
    <link>/docs/integrations/database_guide/configuration_overview/</link>
    <description>Recent content in Configuring Databases on Ferris Labs</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/integrations/database_guide/configuration_overview/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Adding New Drivers in Docker</title>
      <link>/docs/integrations/database_guide/configuration_overview/docker-add-drivers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/integrations/database_guide/configuration_overview/docker-add-drivers/</guid>
      <description>
        
        
        &lt;h2 id=&#34;adding-new-database-drivers-in-docker&#34;&gt;Adding New Database Drivers in Docker&lt;/h2&gt;
&lt;p&gt;Ferris requires a Python database driver to be installed within the Executor Image for each additional type of database you
want to connect to.&lt;/p&gt;
&lt;p&gt;In this section, we&amp;rsquo;ll walk through how to install the MySQL connector library. The connector
library installation process is the same for all additional libraries and we&amp;rsquo;ll end this section
with the recommended connector library for each database.&lt;/p&gt;
&lt;h3 id=&#34;1-determine-the-driver-you-need&#34;&gt;1. Determine the driver you need&lt;/h3&gt;
&lt;p&gt;To figure out how to install the &lt;a href=&#34;/docs/databases/installing-database-drivers&#34;&gt;database driver&lt;/a&gt; of your choice.&lt;/p&gt;
&lt;p&gt;In the example, we&amp;rsquo;ll walk through the process of installing a MySQL driver in Ferris Executor.&lt;/p&gt;
&lt;h3 id=&#34;2-install-mysql-driver&#34;&gt;2. Install MySQL Driver&lt;/h3&gt;
&lt;p&gt;As we are currently running inside of a Docker container via &lt;code&gt;docker compose&lt;/code&gt;, we cannot simply run
&lt;code&gt;pip install mysqlclient&lt;/code&gt; on our local shell and expect the drivers to be installed within the
Docker containers for Ferris.&lt;/p&gt;
&lt;p&gt;In order to address this, the Ferris &lt;code&gt;docker compose&lt;/code&gt; setup comes with a mechanism for you to
install packages locally, which will be ignored by Git for the purposes of local development. Please
follow these steps:&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;requirements-local.txt&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# From the repo root...
touch ./docker/requirements-local.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add the driver selected in step above:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;mysqlclient&amp;#34; &amp;gt;&amp;gt; ./docker/requirements-local.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Rebuild your local image with the new driver baked in:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker-compose build --force-rm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After the rebuild of the Docker images is complete (which make take a few minutes) you can relaunch using the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The other option is to start Feris via Docker Compose is using the recipe in &lt;code&gt;docker-compose-non-dev.yml&lt;/code&gt;, which will use pre-built frontend assets and skip the building of front-end assets:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker-compose -f docker-compose-non-dev.yml pull
docker-compose -f docker-compose-non-dev.yml up
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-connect-to-mysql&#34;&gt;3. Connect to MySQL&lt;/h3&gt;
&lt;p&gt;Now that you&amp;rsquo;ve got a MySQL driver installed locally, you should be able to test it out.&lt;/p&gt;
&lt;p&gt;We can now create a Datasource in Feris that can be used to connect to a MySQL instance. Assuming
your MySQL instance is running locally and can be accessed via localhost, use the following
connection string in “SQL Alchemy URI”, by going to Sources &amp;gt; Databases &amp;gt; + icon (to add a new
datasource) in Feris.&lt;/p&gt;
&lt;p&gt;For Docker running in Linux:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql://mysqluser:mysqluserpassword@localhost/example?charset=utf8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For Docker running in OSX:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql://mysqluser:mysqluserpassword@docker.for.mac.host.internal/example?charset=utf8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then click “Test Connection”, which should give you an “OK” message. If not, please look at your
terminal for error messages, and reach out for help.&lt;/p&gt;
&lt;p&gt;You can repeat this process for every database you want Feris to be able to connect to.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Extra Database Settings</title>
      <link>/docs/integrations/database_guide/configuration_overview/extra-settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/integrations/database_guide/configuration_overview/extra-settings/</guid>
      <description>
        
        
        &lt;h2 id=&#34;extra-database-settings&#34;&gt;Extra Database Settings&lt;/h2&gt;
&lt;h3 id=&#34;deeper-sqlalchemy-integration&#34;&gt;Deeper SQLAlchemy Integration&lt;/h3&gt;
&lt;p&gt;It is possible to tweak the database connection information using the parameters exposed by
SQLAlchemy. In the &lt;strong&gt;Database edit&lt;/strong&gt; view, you can edit the &lt;strong&gt;Extra&lt;/strong&gt; field as a JSON blob.&lt;/p&gt;
&lt;p&gt;This JSON string contains extra configuration elements. The &lt;code&gt;engine_params&lt;/code&gt; object gets unpacked
into the &lt;code&gt;sqlalchemy.create_engine&lt;/code&gt; call, while the &lt;code&gt;metadata_params&lt;/code&gt; get unpacked into the
&lt;code&gt;sqlalchemy.MetaData&lt;/code&gt; call. Refer to the SQLAlchemy docs for more information.&lt;/p&gt;
&lt;h3 id=&#34;schemas&#34;&gt;Schemas&lt;/h3&gt;
&lt;p&gt;Databases like Postgres and Redshift use the &lt;strong&gt;schema&lt;/strong&gt; as the logical entity on top of the
&lt;strong&gt;database&lt;/strong&gt;. For Feris to connect to a specific schema, you can set the &lt;strong&gt;schema&lt;/strong&gt; parameter in
the &lt;strong&gt;Edit Tables&lt;/strong&gt; form (Sources &amp;gt; Tables &amp;gt; Edit record).&lt;/p&gt;
&lt;h3 id=&#34;external-password-store-for-sqlalchemy-connections&#34;&gt;External Password Store for SQLAlchemy Connections&lt;/h3&gt;
&lt;p&gt;Feris can be configured to use an external store for database passwords. This is useful if you a
running a custom secret distribution framework and do not wish to store secrets in Feris’s meta
database.&lt;/p&gt;
&lt;p&gt;Example: Write a function that takes a single argument of type &lt;code&gt;sqla.engine.url&lt;/code&gt; and returns the
password for the given connection string. Then set &lt;code&gt;SQLALCHEMY_CUSTOM_PASSWORD_STORE&lt;/code&gt; in your config
file to point to that function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example_lookup_password&lt;/span&gt;(url):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    secret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;get password &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; external framework&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SQLALCHEMY_CUSTOM_PASSWORD_STORE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example_lookup_password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;A common pattern is to use environment variables to make secrets available.
&lt;code&gt;SQLALCHEMY_CUSTOM_PASSWORD_STORE&lt;/code&gt; can also be used for that purpose.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;example_password_as_env_var&lt;/span&gt;(url):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# assuming the uri looks like&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mysql://localhost?Feris_user:{Feris_PASSWORD}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; url&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;password&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SQLALCHEMY_CUSTOM_PASSWORD_STORE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; example_password_as_env_var
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ssl-access-to-databases&#34;&gt;SSL Access to Databases&lt;/h3&gt;
&lt;p&gt;You can use the &lt;code&gt;Extra&lt;/code&gt; field in the &lt;strong&gt;Edit Databases&lt;/strong&gt; form to configure SSL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;metadata_params&amp;#34;&lt;/span&gt;: {},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;engine_params&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;connect_args&amp;#34;&lt;/span&gt;:{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sslmode&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;require&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sslrootcert&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/path/to/my/pem&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Installing Database Drivers</title>
      <link>/docs/integrations/database_guide/configuration_overview/installing-database-drivers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/integrations/database_guide/configuration_overview/installing-database-drivers/</guid>
      <description>
        
        
        &lt;h2 id=&#34;install-database-drivers&#34;&gt;Install Database Drivers&lt;/h2&gt;
&lt;p&gt;Feris requires a Python DB-API database driver and a SQLAlchemy
dialect to be installed for each datastore you want to connect to.&lt;/p&gt;
&lt;p&gt;You can read more &lt;a href=&#34;/docs/databases/docker-add-drivers&#34;&gt;here&lt;/a&gt; about how to
install new database drivers into your Feris configuration.&lt;/p&gt;
&lt;h3 id=&#34;supported-databases-and-dependencies&#34;&gt;Supported Databases and Dependencies&lt;/h3&gt;
&lt;p&gt;Feris does not ship bundled with connectivity to databases, except for SQLite,
which is part of the Python standard library. You’ll need to install the required packages for the database you want to use as your metadata database as well as the packages needed to connect to the databases you want to access through Feris.&lt;/p&gt;
&lt;p&gt;A list of some of the recommended packages.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Database&lt;/th&gt;
&lt;th&gt;PyPI package&lt;/th&gt;
&lt;th&gt;Connection String&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/athena&#34;&gt;Amazon Athena&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install &amp;quot;PyAthenaJDBC&amp;gt;1.0.9&lt;/code&gt; , &lt;code&gt;pip install &amp;quot;PyAthena&amp;gt;1.2.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;awsathena+rest://{aws_access_key_id}:{aws_secret_access_key}@athena.{region_name}.amazonaws.com/{ &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/redshift&#34;&gt;Amazon Redshift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy-redshift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt; redshift+psycopg2://&amp;lt;userName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;AWS End Point&amp;gt;:5439/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/drill&#34;&gt;Apache Drill&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy-drill&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;drill+sadrill:// For JDBC drill+jdbc://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/druid&#34;&gt;Apache Druid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pydruid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;druid://&amp;lt;User&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;Host&amp;gt;:&amp;lt;Port-default-9088&amp;gt;/druid/v2/sql&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/hive&#34;&gt;Apache Hive&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pyhive&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hive://hive@{hostname}:{port}/{database}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/impala&#34;&gt;Apache Impala&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install impyla&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;impala://{hostname}:{port}/{database}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/kylin&#34;&gt;Apache Kylin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install kylinpy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;kylin://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;project&amp;gt;?&amp;lt;param1&amp;gt;=&amp;lt;value1&amp;gt;&amp;amp;&amp;lt;param2&amp;gt;=&amp;lt;value2&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/pinot&#34;&gt;Apache Pinot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pinotdb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pinot://BROKER:5436/query?server=http://CONTROLLER:5983/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/solr&#34;&gt;Apache Solr&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy-solr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;solr://{username}:{password}@{hostname}:{port}/{server_path}/{collection}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/spark-sql&#34;&gt;Apache Spark SQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pyhive&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hive://hive@{hostname}:{port}/{database}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/ascend&#34;&gt;Ascend.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install impyla&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ascend://{username}:{password}@{hostname}:{port}/{database}?auth_mechanism=PLAIN;use_ssl=true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/sql-server&#34;&gt;Azure MS SQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pymssql&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mssql+pymssql://UserName@presetSQL:TestPassword@presetSQL.database.windows.net:1433/TestSchema&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/bigquery&#34;&gt;Big Query&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pybigquery&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bigquery://{project_id}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/clickhouse&#34;&gt;ClickHouse&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install clickhouse-driver==0.2.0 &amp;amp;&amp;amp; pip install clickhouse-sqlalchemy==0.1.6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clickhouse+native://{username}:{password}@{hostname}:{port}/{database}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/cockroachdb&#34;&gt;CockroachDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install cockroachdb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cockroachdb://root@{hostname}:{port}/{database}?sslmode=disable&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/dremio&#34;&gt;Dremio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy_dremio&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dremio://user:pwd@host:31010/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install elasticsearch-dbapi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elasticsearch+http://{user}:{password}@{host}:9200/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/exasol&#34;&gt;Exasol&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy-exasol&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;exa+pyodbc://{username}:{password}@{hostname}:{port}/my_schema?CONNECTIONLCALL=en_US.UTF-8&amp;amp;driver=EXAODBC&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/google-sheets&#34;&gt;Google Sheets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install shillelagh[gsheetsapi]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gsheets://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/firebolt&#34;&gt;Firebolt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install firebolt-sqlalchemy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;firebolt://{username}:{password}@{database} or firebolt://{username}:{password}@{database}/{engine_name}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/hologres&#34;&gt;Hologres&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install psycopg2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;postgresql+psycopg2://&amp;lt;UserName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;Database Host&amp;gt;/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/ibm-db2&#34;&gt;IBM Db2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install ibm_db_sa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;db2+ibm_db://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/netezza&#34;&gt;IBM Netezza Performance Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install nzalchemy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;netezza+nzpy://&amp;lt;UserName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;Database Host&amp;gt;/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install mysqlclient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mysql://&amp;lt;UserName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;Database Host&amp;gt;/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/oracle&#34;&gt;Oracle&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install cx_Oracle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;oracle://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/postgres&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install psycopg2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;postgresql://&amp;lt;UserName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;Database Host&amp;gt;/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/trino&#34;&gt;Trino&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy-trino&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;trino://{username}:{password}@{hostname}:{port}/{catalog}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/presto&#34;&gt;Presto&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pyhive&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;presto://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/hana&#34;&gt;SAP Hana&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install hdbcli sqlalchemy-hana or pip install apache-Feris[hana]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hana://{username}:{password}@{host}:{port}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/snowflake&#34;&gt;Snowflake&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install snowflake-sqlalchemy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;snowflake://{user}:{password}@{account}.{region}/{database}?role={role}&amp;amp;warehouse={warehouse}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQLite&lt;/td&gt;
&lt;td&gt;No additional library needed&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sqlite://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/sql-server&#34;&gt;SQL Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install pymssql&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mssql://&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/teradata&#34;&gt;Teradata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install teradatasqlalchemy &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;teradata://{user}:{password}@{host}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/vertica&#34;&gt;Vertica&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install sqlalchemy-vertica-python&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vertica+vertica_python://&amp;lt;UserName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;Database Host&amp;gt;/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/docs/databases/yugabytedb&#34;&gt;YugabyteDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pip install psycopg2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;postgresql://&amp;lt;UserName&amp;gt;:&amp;lt;DBPassword&amp;gt;@&amp;lt;Database Host&amp;gt;/&amp;lt;Database Name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;Note that many other databases are supported, the main criteria being the existence of a functional
SQLAlchemy dialect and Python driver. Searching for the keyword &amp;ldquo;sqlalchemy + (database name)&amp;rdquo;
should help get you to the right place.&lt;/p&gt;
&lt;p&gt;If your database or data engine isn&amp;rsquo;t on the list but a SQL interface
exists, please file an issue on the
&lt;a href=&#34;https://github.com/apache/Feris/issues&#34;&gt;Feris GitHub repo&lt;/a&gt;, so we can work on documenting and
supporting it.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;d like to build a database connector for Feris integration,
read the &lt;a href=&#34;https://preset.io/blog/building-database-connector/&#34;&gt;following tutorial&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Using Database Connection UI</title>
      <link>/docs/integrations/database_guide/configuration_overview/db-connection-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/integrations/database_guide/configuration_overview/db-connection-ui/</guid>
      <description>
        
        
        &lt;p&gt;Here is the documentation on how to leverage the new DB Connection UI. This will provide admins the ability to enhance the UX for users who want to connect to new databases.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/27827808/125499607-94e300aa-1c0f-4c60-b199-3f9de41060a3.gif&#34; alt=&#34;db-conn-docs&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are now 3 steps when connecting to a database in the new UI:&lt;/p&gt;
&lt;p&gt;Step 1: First the admin must inform Feris what engine they want to connect to. This page is powered by the &lt;code&gt;/available&lt;/code&gt; endpoint which pulls on the engines currently installed in your environment, so that only supported databases are shown.&lt;/p&gt;
&lt;p&gt;Step 2: Next, the admin is prompted to enter database specific parameters. Depending on whether there is a dynamic form available for that specific engine, the admin will either see the new custom form or the legacy SQLAlchemy form. We currently have built dynamic forms for (Redshift, MySQL, Postgres, and BigQuery). The new form prompts the user for the parameters needed to connect (for example, username, password, host, port, etc.) and provides immediate feedback on errors.&lt;/p&gt;
&lt;p&gt;Step 3: Finally, once the admin has connected to their DB using the dynamic form they have the opportunity to update any optional advanced settings.&lt;/p&gt;
&lt;p&gt;We hope this feature will help eliminate a huge bottleneck for users to get into the application and start crafting datasets.&lt;/p&gt;
&lt;h3 id=&#34;how-to-setup-up-preferred-database-options-and-images&#34;&gt;How to setup up preferred database options and images&lt;/h3&gt;
&lt;p&gt;We added a new configuration option where the admin can define their preferred databases, in order:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# A list of preferred databases, in order. These databases will be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# displayed prominently in the &amp;#34;Add Database&amp;#34; dialog. You should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# use the &amp;#34;engine_name&amp;#34; attribute of the corresponding DB engine spec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# in `Feris/db_engine_specs/`.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PREFERRED_DATABASES: List[str] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PostgreSQL&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Presto&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MySQL&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SQLite&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;For copyright reasons the logos for each database are not distributed with Feris.&lt;/p&gt;
&lt;h3 id=&#34;setting-images&#34;&gt;Setting images&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To set the images of your preferred database, admins must create a mapping in the &lt;code&gt;Feris_text.yml&lt;/code&gt; file with engine and location of the image. The image can be host locally inside your static/file directory or online (e.g. S3)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DB_IMAGES:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  postgresql: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path/to/image/postgres.jpg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  bigquery: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path/to/s3bucket/bigquery.jpg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  snowflake: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path/to/image/snowflake.jpg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;how-to-add-new-database-engines-to-available-endpoint&#34;&gt;How to add new database engines to available endpoint&lt;/h3&gt;
&lt;p&gt;Currently the new modal supports the following databases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;li&gt;Redshift&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;BigQuery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the user selects a database not in this list they will see the old dialog asking for the SQLAlchemy URI. New databases can be added gradually to the new flow. In order to support the rich configuration a DB engine spec needs to have the following attributes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;parameters_schema&lt;/code&gt;: a Marshmallow schema defining the parameters needed to configure the database. For Postgres this includes username, password, host, port, etc. (&lt;a href=&#34;https://github.com/apache/Feris/blob/accee507c0819cd0d7bcfb5a3e1199bc81eeebf2/Feris/db_engine_specs/base.py#L1309-L1320&#34;&gt;see&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_driver&lt;/code&gt;: the name of the recommended driver for the DB engine spec. Many SQLAlchemy dialects support multiple drivers, but usually one is the official recommendation. For Postgres we use &amp;ldquo;psycopg2&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqlalchemy_uri_placeholder&lt;/code&gt;: a string that helps the user in case they want to type the URI directly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;encryption_parameters&lt;/code&gt;: parameters used to build the URI when the user opts for an encrypted connection. For Postgres this is &lt;code&gt;{&amp;quot;sslmode&amp;quot;: &amp;quot;require&amp;quot;}&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In addition, the DB engine spec must implement these class methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;build_sqlalchemy_uri(cls, parameters, encrypted_extra)&lt;/code&gt;: this method receives the distinct parameters and builds the URI from them.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get_parameters_from_uri(cls, uri, encrypted_extra)&lt;/code&gt;: this method does the opposite, extracting the parameters from a given URI.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;validate_parameters(cls, parameters)&lt;/code&gt;: this method is used for &lt;code&gt;onBlur&lt;/code&gt; validation of the form. It should return a list of &lt;code&gt;FerisError&lt;/code&gt; indicating which parameters are missing, and which parameters are definitely incorrect (&lt;a href=&#34;https://github.com/apache/Feris/blob/accee507c0819cd0d7bcfb5a3e1199bc81eeebf2/Feris/db_engine_specs/base.py#L1404&#34;&gt;example&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For databases like MySQL and Postgres that use the standard format of &lt;code&gt;engine+driver://user:password@host:port/dbname&lt;/code&gt; all you need to do is add the &lt;code&gt;BasicParametersMixin&lt;/code&gt; to the DB engine spec, and then define the parameters 2-4 (&lt;code&gt;parameters_schema&lt;/code&gt; is already present in the mixin).&lt;/p&gt;
&lt;p&gt;For other databases you need to implement these methods yourself. The BigQuery DB engine spec is a good example of how to do that.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
